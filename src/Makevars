CUDA_HOME = /usr/local/cuda-11.0
PKG_CPPFLAGS = -I. -I"${CUDA_HOME}/include" -std=c++11
R_HOME = /home/hhclab/R/x86_64-pc-linux-gnu-library/4.0
CXX = /usr/bin/g++

#########################################

R_INC = /usr/share/R/include
RCPP_INC = $(R_HOME)/Rcpp/include

NVCC = $(CUDA_HOME)/bin/nvcc
CUDA_INC = $(CUDA_HOME)/include
CUDA_LIB = $(CUDA_HOME)/lib64

# This defines what the shared object libraries will be
PKG_LIBS= -L$(CUDA_LIB) -Wl,-rpath,$(CUDA_LIB) -lcudart -lcublas

#LIBS = -lcudart -d
NVCC_FLAGS = -Xcompiler -fPIC -gencode arch=compute_75,code=sm_75 -I$(R_INC)

### Define objects
cu_sources := $(wildcard *cu)
cu_sharedlibs := $(patsubst %.cu, %.o,$(cu_sources))

cpp_sources := $(wildcard *.cpp)
cpp_sharedlibs := $(patsubst %.cpp, %.o, $(cpp_sources))

OBJECTS = $(cu_sharedlibs) $(cpp_sharedlibs)

all : rcppcuda.so

rcppcuda.so: $(OBJECTS)

%.o: %.cu $(cu_sources)
			$(NVCC) $(NVCC_FLAGS) -DGPU -x cu -I$(CUDA_INC) $< -c 
